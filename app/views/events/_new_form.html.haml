- set_html_title(icon: 'fa-bullhorn')

= render_breadcrumbs(tag: :h1, tag_opts: { class: 'page-header' }, crumb_opts: { ul_class: 'breadcrumb breadcrumb-without-background' })

= dci_form_for [eventable.owner, eventable, event], nested: true, html: { id: 'event_form' }, label_col: 'col-sm-3 col-lg-2', control_col: 'col-sm-5 col-md-4 col-lg-3' do |f|

  = f.errors_on  :base

  = f.text_field      :title,       required: false
  = f.text_field      :location,    required: false
  = f.text_area       :description, required: false
  = f.datetime_picker :start_time,  { required: true }, { lang: User.current.language }
  = f.datetime_picker :end_time,    { required: true }, { lang: User.current.language }
  = f.switch          :all_day,     data: { size: 'small' }
  = f.text_field      :color
  = f.text_field      :category_list, 'data-role' => 'tagsinput'
  = f.select          :visibility, Event.available_visibility_options, prompt: true

  .row
    .col-md-6
      = f.select :frequency, Event.available_frequency_periods, {}, onchange: "FullCalendar.Form.toggle_repeat_until(this.value);"
    .col-md-6
      - display = (f.object.frequency.nil? || f.object.frequency == 'no_repeat') ? false : true
      #repeat_until{ style: display_on_condition(display, true) }
        = f.datetime_picker :repeat_until, { required: f.object.is_a?(EventCollection) }, { lang: User.current.language, timepicker: false, format: 'd/m/Y' }

  - unless event.is_a?(EventCollection)
    = f.form_group do
      %table{ class: 'table table-hover', id: 'attachments_list' }
        %thead
          %tr
            %th= get_model_name_for('EventAttachment')
            %th= f.link_to_add label_with_icon(t('.add_attachment'), 'fa-plus', fixed: true), :event_attachments, data: { target: "#attachments_list" }

        %tbody
          = f.fields_for :event_attachments, wrapper: false do |ff|
            %tr{ class: 'fields' }
              %td{ class: 'vert-align' }= ff.text_field :url, hide_label: true, control_col: 'col-md-12', placeholder: 'http://'
              %td{ class: 'vert-align' }= ff.link_to_remove icon('fa-trash-o')

  = f.form_group do
    = f.success nil, data: { disable_with: t('text.save_in_progress') }

:coffee
  $("input[data-role=tagsinput], select[multiple][data-role=tagsinput]").tagsinput()
  $('#event_color').minicolors theme: 'bootstrap' if $('#event_color').length > 0
  $('#event_collection_color').minicolors theme: 'bootstrap' if $('#event_collection_color').length > 0
  FullCalendar.Form.toggle_repeat_until($('#event_frequency option:selected').val()) if $('#event_frequency').length > 0
  FullCalendar.Form.toggle_repeat_until($('#event_collection_frequency option:selected').val()) if $('#event_collection_frequency').length > 0

- if request.xhr?
  :coffee
    $('.bootstrap-tagsinput').css('display', 'block')
